#!/bin/bash

base_dir=$(dirname "$0")

help() {
    local script_name
    script_name=$(basename "$0")
    echo "Get the path to the puzzle input of a given year and day of advent of code."
    echo
    echo "Usage: $script_name [OPTION]..."
    echo "  -y, --year YEAR       The year of the puzzle input"
    echo "  -d, --day DAY         The day of the puzzle input"
    echo "  -t, --test TEST       Return input for text TEST"
    echo "    if no TEST is given, return the input for the first test"
    echo "  -p, --part PART       Return result for part PART of test TEST"
    echo "    a is equivalent to 1, b is equivalent to 2"
    echo "  -h, --help            Display this help and exit"
    echo
    echo "Examples: "
    echo "  $script_name -y 2019 -d 1               # puzzle input of 2019-01"
    echo "  $script_name -y 2019 -d 1 -t            # test input of 2019-01"
    echo "  $script_name -y 2019 -d 1 -t -p 1       # test result of 2019-01 part 1 of test 1"
    echo "  $script_name -y 2019 -d 1 -t 2 -p a     # test result of 2019-01 part a of test 2"
    exit 2
}

echoerr() {
    echo "ERROR: $1" 1>&2
}

download_dir() {
    local year="$1"
    local day="$2"
    printf -v day "%02d" "$day"
    echo "data/$year/day$day"
}

fname() {
    local day="$1"
    local test="$2"
    local part="$3"

    printf -v day "%02d" "$day"

    local prefix="day$day"

    if [ -z "$test" ]; then
        echo "${prefix}_input_puzzle.txt"
    elif [ -z "$part" ]; then
        echo "${prefix}_input_test_${test}.txt"
    else
        echo "${prefix}${part}_result_test_${test}.txt"
    fi
}

check_year() {
    local year="$1"
    if [ "$year" = "" ] || { [ "$year" -lt 2015 ] || [ "$year" -gt "$(date +%Y)" ]; }
    then
        echoerr "Invalid year: $year"
        help
    fi
}

check_day() {
    local day="$1"

    if [ "$day" = "" ] || [ "$day" -lt 1 ] || [ "$day" -gt 25 ]
    then
        echoerr "Invalid day: $day"
        help
    fi
}

check_test() {
    local test="$1"
    if [ "$test" != "" ] && [ "$test" -lt 1 ]
    then
        echoerr "Invalid test: $test"
        help
    fi
}

check_part() {
    if [ "$1" != "" ] && [ "$1" != "a" ] && [ "$1" != "b" ] && [ "$1" != "1" ] && [ "$1" != "2" ]
    then
        echoerr "Invalid part: $1"
        help
    fi
}



main() {
    local year
    local day
    local part
    local test

    while [ "$#" -gt 0 ]; do
        case "$1" in
            -y|--year)
                year="$2"
                check_year "$year" || help
                shift 2
                ;;
            -d|--day)
                day="$2"
                check_day "$day" || help
                shift 2
                ;;
            -t|--test)
                if [ "$2" == "" ] || [[ "$2" =~ ^- ]]; then
                    test="1"
                    shift 1
                else
                    test="$2"
                    shift 2
                fi
                check_test "$test" || help
                ;;
            -p|--part)
                part="$2"
                check_part "$part" || help
                case "$part" in
                    1) part="a" ;;
                    2) part="b" ;;
                esac
                shift 2
                ;;
            -h|--help)
                help
                ;;
            *)
                echo "Unknown option: $1"
                help
                ;;
        esac
    done

    if [ -n "$part" ] && [ -z "$test" ]; then
        echoerr "Part must be used with test"
        help
    fi


    local dir
    local file
    dir="$(download_dir "$year" "$day")"
    file="$(fname "$day" "$test" "$part")"

    local path="$base_dir/$dir/$file"

    if [ ! -f "$path" ]; then
        echoerr "File not found: $path"
        exit 1
    fi
    echo "$path"
}

main "$@"

